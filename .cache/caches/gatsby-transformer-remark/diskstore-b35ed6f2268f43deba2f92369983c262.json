{"expireTime":9007201002007610000,"key":"transformer-remark-markdown-html-964d9db64fdc4ff5baedd19a8da95312-gatsby-remark-external-linksgatsby-remark-imagesgatsby-remark-code-titlesgatsby-remark-prismjs-","val":"<p>I built a custom dynamic memory allocator in C that implements my own versions of malloc, free, and realloc within a single mm.c file. Using GCC and a Makefile on Linux, I automated compilation and testing with a trace-driven harness that exercises edge cases and varied allocation patterns. To guarantee correctness and performance, I developed a heap consistency checker—leveraging GDB for in-depth debugging and Valgrind to detect leaks and alignment errors—ensuring proper coalescing of free blocks and strict 16-byte alignment. This project deepened my understanding of low-level memory management, pointer arithmetic, and systems-level optimizations, resulting in an allocator that is both fast and space-efficient.</p>"}